{slice} = []

module.exports = class EventMultiplexer
  constructor:(@context)->
    @events = {}
  
  on:(event, listener)->
    multiplexer = @
    multiplex = multiplexer.events[event]
    unless multiplex?
      isNew = yes
      multiplex = multiplexer.events[event] =->
        for listener in multiplex.listeners
          listener.apply multiplexer.context, slice.call arguments
        return
      multiplex.listeners = []
    multiplex.listeners.push listener
    if isNew then multiplex
  
  off:(event, listenerToRemove)->
    multiplexer = @
    multiplex = multiplexer.events[event]
    unless multiplex
      -1
    else
      for listener, index in multiplex.listeners
        if listener is listenerToRemove
          multiplex.listeners.splice index, 1
      multiplex.listeners.length