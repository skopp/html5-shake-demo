// Generated by CoffeeScript 1.3.3
(function() {
  var EventMultiplexer, slice;

  slice = [].slice;

  module.exports = EventMultiplexer = (function() {

    function EventMultiplexer(context) {
      this.context = context;
      this.events = {};
    }

    EventMultiplexer.prototype.on = function(event, listener) {
      var isNew, multiplex, multiplexer;
      multiplexer = this;
      multiplex = multiplexer.events[event];
      if (multiplex == null) {
        isNew = true;
        multiplex = multiplexer.events[event] = function() {
          var _i, _len, _ref;
          _ref = multiplex.listeners;
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            listener = _ref[_i];
            listener.apply(multiplexer.context, slice.call(arguments));
          }
        };
        multiplex.listeners = [];
      }
      multiplex.listeners.push(listener);
      if (isNew) {
        return multiplex;
      }
    };

    EventMultiplexer.prototype.off = function(event, listenerToRemove) {
      var index, listener, multiplex, multiplexer, _i, _len, _ref;
      multiplexer = this;
      multiplex = multiplexer.events[event];
      if (!multiplex) {
        return -1;
      } else {
        _ref = multiplex.listeners;
        for (index = _i = 0, _len = _ref.length; _i < _len; index = ++_i) {
          listener = _ref[index];
          if (listener === listenerToRemove) {
            multiplex.listeners.splice(index, 1);
          }
        }
        return multiplex.listeners.length;
      }
    };

    return EventMultiplexer;

  })();

}).call(this);
