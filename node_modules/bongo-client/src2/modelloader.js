// Generated by CoffeeScript 1.3.3
(function() {
  var EventEmitter, ModelLoader,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  EventEmitter = require('events').EventEmitter;

  module.exports = ModelLoader = (function(_super) {
    var load_;

    __extends(ModelLoader, _super);

    function ModelLoader(konstructor, _id) {
      this._id = _id;
      this.constructor = konstructor;
      this.setMaxListeners(0);
    }

    load_ = function() {
      var _this = this;
      return this.constructor.one({
        _id: this._id
      }, function(err, model) {
        return _this.emit('load', err, model);
      });
    };

    ModelLoader.prototype.load = function(listener) {
      this.once('load', listener);
      if (!this.isLoading) {
        this.isLoading = true;
        return load_.call(this);
      }
    };

    return ModelLoader;

  })(EventEmitter);

}).call(this);
