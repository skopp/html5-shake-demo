var bongo = require('../../lib');

// Library:
var JsPost = bongo.Model.extend({
  // static properties (optional):
  schema: {
    title     : String,
    body      : {
      type    : String,
      pattern : [
        {
          errorCode : Math.E,
          message   : 'the body of your blog post must'
                    + ' begin with a capital letter'
        },
        /^[A-Z]/
      ]
    }
  }
  
},{  
  // instance properties (named constructor is required):
  
  // you should provide a name for your constructor:
  constructor: function JsPost(data) {
    // you can call the superconstructor using this.Uber (with a capital U)
    this.Uber(data);
  },
  
  testMethod: function () {
    console.log(this);
  },
  
  save: function (callback) {
    //intercepted the call to save
    console.log('hey from JavaScript!');
    return this.uber('save', callback);  // you can call a super method using this.uber (lowercase)
  }
  
});

// Application:
JsPost/*or Model or bongo*/.setClient('localhost:27017/test');

new JsPost({
  title : 'O hai',
  body  : 'this is my fantastic blog post!'
})
  .on('error', function (err, docs) {
    var model = this;
    if(err.errors != null) {
      err.errors.forEach(function(err){
        if (err.errorCode === Math.E) {
          model.body = bongo.Inflector.capitalize(model.body);
          model.save();
        } 
      })
    }
  })
  .on('validate', log)
  .on('save', function (docs) {
    log('hooray!', this);
    process.kill()
  })
  .save();